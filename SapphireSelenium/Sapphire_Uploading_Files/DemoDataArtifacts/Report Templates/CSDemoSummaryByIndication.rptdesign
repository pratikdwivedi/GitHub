<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.1.v201309091055 Build &lt;4.3.1.v20130917-1035></property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[importPackage( Packages.org.eclipse.birt.report.engine.api.script.element );
importPackage(Packages.org.eclipse.birt.report.model.api);
importPackage(Packages.org.eclipse.birt.report.model.api.elements);
importPackage(Packages.org.eclipse.birt.report.model.api.elements.structures);
importPackage(Packages.org.eclipse.birt.report.engine.script.internal.element);
importPackage(Packages.org.eclipse.birt.data.engine.api);
importPackage(Packages.org.eclipse.birt.report.model.api);
importPackage(Packages.org.eclipse.birt.data.engine.api.querydefn);
importPackage(Packages.org.eclipse.birt.data.engine.core);
importPackage(Packages.org.eclipse.birt.core.data);

// get indication list for drug

var myconfig = reportContext.getReportRunnable().getReportEngine().getConfig();
var de = DataEngine.newDataEngine( myconfig, null );
var dsrc = reportContext.getDesignHandle().findDataSource("CS");
var dset = reportContext.getDesignHandle().findDataSet("Indications");
var odaDataSource = new OdaDataSourceDesign( "Test Data Source" );
odaDataSource.setExtensionID( "org.eclipse.birt.report.data.oda.jdbc" );
odaDataSource.addPublicProperty( "odaURL", dsrc.getProperty("odaURL").toString() );
odaDataSource.addPublicProperty( "odaDriverClass", dsrc.getProperty("odaDriverClass").toString());
odaDataSource.addPublicProperty( "odaUser", dsrc.getProperty("odaUser").toString() );
odaDataSource.addPublicProperty( "odaPassword", dsrc.getProperty("odaPassword").toString() );  
 
var odaDataSet = new OdaDataSetDesign( "Test Data Set" );
odaDataSet.setDataSource( odaDataSource.getName( ) );
odaDataSet.setExtensionID( "org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" );
var prodList = params["Drug Name"].split("~");
var product = "'"+prodList[0]+"'";
var queryText = dset.getQueryText();
queryText = queryText.replace(":drugs",product);
odaDataSet.setQueryText( queryText ); 

de.defineDataSource( odaDataSource );
de.defineDataSet( odaDataSet );
  
queryDefinition = new QueryDefinition( );
queryDefinition.setDataSetName( odaDataSet.getName() );
queryDefinition.setAutoBinding(true);
  
  
var pq = de.prepare( queryDefinition );
  
var qr = pq.execute( null );
rowcount=0;  
var ri = qr.getResultIterator( );  
var indList = new Array();
var count=0
while (  ri.next( ) )
{  
 indList[0] = ri.getValue("pt_name");
}
ri.close( );
qr.close( );
de.shutdown( );
var indName = indList.join("~");
var indval = params["Indication List"].value;
if (indval !=null &amp;&amp; indval.length >0){
}else{
	params["Indication List"].value=indName;
}

// Update table columns
var dta = null	
var str = "";
elementFactory = reportContext.getDesignHandle().getElementFactory();

indval = params["Indication List"].value;
var dataCols = new Array();
if(indval != null &amp;&amp; indval.length>0){
	dataCols = indval.split("~");
}
//age group

mytable = reportContext.getDesignHandle().findElement("AgeGroup");
colBinding = mytable.getColumnBindings();
// group column binding
ccb = StructureFactory.createComputedColumn();	
ccb.setName("grpClm");	
ccb.setExpression("dataSetRow[\"grpClm\"]");	
ccb.setDataType("String");	
colBinding.addItem(ccb);


// group
group = elementFactory.newTableGroup( );
group.setName("CaseGroup");
var newKeyExpr = new Expression("row[\"grpClm\"]", ExpressionType.JAVASCRIPT);
group.setExpressionProperty( "keyExpr",	newKeyExpr );
group.setInterval("none");
group.setSortDirection("asc");		
mytable.getGroups( ).add( group );

groupFooter = elementFactory.newTableRow( 2+dataCols.length);	
tcell = groupFooter.getCells( ).get( 0 );
mylabel = elementFactory.newLabel( null );
mylabel.setText( "Total" );
tcell.getContent( ).add( mylabel );
tcell.setProperty("backgroundColor","silver");	
tcell.setProperty("fontWeight","bold");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
for(i=0;i<dataCols.length;i++)
{
// Add column bindings to the table
	ccb = StructureFactory.createComputedColumn();	
	ccb.setName("IND"+i);	
	ccb.setExpression("dataSetRow[\"IND"+i+"\"]");	
	ccb.setDataType("String");	
	colBinding.addItem(ccb); 		
// Add aggregate column to group
	csg = StructureFactory.createComputedColumn( );
	csg.setName("Total"+i);
	csg.setDataType("Integer");
	csg.setAggregateOn("CaseGroup");
    csg.setAggregateFunction("Sum");
    var expression = new Expression("row[\"IND"+i+"\"]", ExpressionType.JAVASCRIPT);
    aggrArgument = StructureFactory.createAggregationArgument( );
	aggrArgument.setName( "Expression" );
	aggrArgument.setExpressionProperty("value",expression);
    csg.addArgument( aggrArgument );
	colBinding.addItem( csg );		
// Add column
	mytable.insertColumn(i+1,1);	
	
// Add column headers
	myheader = mytable.getHeader( ).get( 0 );
	tcell = myheader.getCells( ).get( i+1 );		
	
	mylabel = elementFactory.newLabel( null );
	mylabel.setText( dataCols[i] );
	tcell.getContent( ).add( mylabel );
	tcell.setProperty("backgroundColor","silver");
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
			
// and finally add data items
	mydetail =  mytable.getDetail( ).get( 0 );
	tcell = mydetail.getCells( ).get( i+1);
	dynamicTextHandle = elementFactory.newTextData( null );
	dynamicTextHandle.setValueExpr( "if(row[\"IND"+i+"\"] != null){row[\"IND"+i+"\"]+\" (\"+Formatter.format(Finance.percent(row[\"Total"+i+"\"],row[\"IND"+i+"\"]),\"#.##\")+\"%)\"}" );
	tcell.getContent( ).add( dynamicTextHandle );
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
	tcell.setProperty("textAlign","right");
	
	
	tcell = groupFooter.getCells( ).get( i+1 );
	gdata = elementFactory.newDataItem( null );
	gdata.setResultSetColumn( "Total" +i);
	fv = StructureFactory.newFormatValue();
	fv.setPattern("###0{RoundingMode=HALF_UP}");
	gdata.setProperty("numberFormat", fv);
	gdata.setProperty("textAlign","right");
	tcell.getContent( ).add( gdata );
	tcell.setProperty("backgroundColor","silver");		
	tcell.setProperty("fontWeight","bold");
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
}
// Other column
ccb = StructureFactory.createComputedColumn();	
ccb.setName("OTHERS");	
ccb.setExpression("dataSetRow[\"OTHERS\"]");	
ccb.setDataType("String");	
colBinding.addItem(ccb);

csg = StructureFactory.createComputedColumn( );
csg.setName("Total"+dataCols.length);
csg.setDataType("Integer");
csg.setAggregateOn("CaseGroup");
csg.setAggregateFunction("Sum");
var expression = new Expression("row[\"OTHERS\"]", ExpressionType.JAVASCRIPT);
aggrArgument = StructureFactory.createAggregationArgument( );
aggrArgument.setName( "Expression" );
aggrArgument.setExpressionProperty("value",expression);
csg.addArgument( aggrArgument );
colBinding.addItem( csg );		

mytable.insertColumn(dataCols.length+1,1);	


myheader = mytable.getHeader( ).get( 0 );
tcell = myheader.getCells( ).get( dataCols.length+1 );		
	
mylabel = elementFactory.newLabel( null );
mylabel.setText( "Others" );
tcell.getContent( ).add( mylabel );
tcell.setProperty("backgroundColor","silver");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
			
// and finally add data items
mydetail =  mytable.getDetail( ).get( 0 );
tcell = mydetail.getCells( ).get(  dataCols.length+1);
dynamicTextHandle = elementFactory.newTextData( null );
dynamicTextHandle.setValueExpr( "if(row[\"OTHERS\"] != null){row[\"OTHERS\"]+\" (\"+Formatter.format(Finance.percent(row[\"Total"+dataCols.length+"\"],row[\"OTHERS\"]),\"#.##\")+\"%)\"}" );
tcell.getContent( ).add( dynamicTextHandle );
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
tcell.setProperty("textAlign","right");
	
	
tcell = groupFooter.getCells( ).get( dataCols.length+1 );
gdata = elementFactory.newDataItem( null );
gdata.setResultSetColumn( "Total" +i);
fv = StructureFactory.newFormatValue();
fv.setPattern("###0{RoundingMode=HALF_UP}");
gdata.setProperty("numberFormat", fv);
gdata.setProperty("textAlign","right");
tcell.getContent( ).add( gdata );
tcell.setProperty("backgroundColor","silver");		
tcell.setProperty("fontWeight","bold");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");

group.getFooter( ).add( groupFooter );

//Gender group

mytable = reportContext.getDesignHandle().findElement("GenderGroup");
colBinding = mytable.getColumnBindings();
// group column binding
ccb = StructureFactory.createComputedColumn();	
ccb.setName("grpClm");	
ccb.setExpression("dataSetRow[\"grpClm\"]");	
ccb.setDataType("String");	
colBinding.addItem(ccb);


// group
group = elementFactory.newTableGroup( );
group.setName("CaseGroup");
var newKeyExpr = new Expression("row[\"grpClm\"]", ExpressionType.JAVASCRIPT);
group.setExpressionProperty( "keyExpr",	newKeyExpr );
group.setInterval("none");
group.setSortDirection("asc");		
mytable.getGroups( ).add( group );

groupFooter = elementFactory.newTableRow( 2+dataCols.length);	
tcell = groupFooter.getCells( ).get( 0 );
mylabel = elementFactory.newLabel( null );
mylabel.setText( "Total" );
tcell.getContent( ).add( mylabel );
tcell.setProperty("backgroundColor","silver");	
tcell.setProperty("fontWeight","bold");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
for(i=0;i<dataCols.length;i++)
{
// Add column bindings to the table
	ccb = StructureFactory.createComputedColumn();	
	ccb.setName("IND"+i);	
	ccb.setExpression("dataSetRow[\"IND"+i+"\"]");	
	ccb.setDataType("String");	
	colBinding.addItem(ccb); 		
// Add aggregate column to group
	csg = StructureFactory.createComputedColumn( );
	csg.setName("Total"+i);
	csg.setDataType("Integer");
	csg.setAggregateOn("CaseGroup");
    csg.setAggregateFunction("Sum");
    var expression = new Expression("row[\"IND"+i+"\"]", ExpressionType.JAVASCRIPT);
    aggrArgument = StructureFactory.createAggregationArgument( );
	aggrArgument.setName( "Expression" );
	aggrArgument.setExpressionProperty("value",expression);
    csg.addArgument( aggrArgument );
	colBinding.addItem( csg );		
// Add column
	mytable.insertColumn(i+1,1);	
	
// Add column headers
	myheader = mytable.getHeader( ).get( 0 );
	tcell = myheader.getCells( ).get( i+1 );		
	
	mylabel = elementFactory.newLabel( null );
	mylabel.setText( dataCols[i] );
	tcell.getContent( ).add( mylabel );
	tcell.setProperty("backgroundColor","silver");
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
			
// and finally add data items
	mydetail =  mytable.getDetail( ).get( 0 );
	tcell = mydetail.getCells( ).get( i+1);
	dynamicTextHandle = elementFactory.newTextData( null );
	dynamicTextHandle.setValueExpr( "if(row[\"IND"+i+"\"] != null){row[\"IND"+i+"\"]+\" (\"+Formatter.format(Finance.percent(row[\"Total"+i+"\"],row[\"IND"+i+"\"]),\"#.##\")+\"%)\"}" );
	tcell.getContent( ).add( dynamicTextHandle );
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
	tcell.setProperty("textAlign","right");
	
	
	tcell = groupFooter.getCells( ).get( i+1 );
	gdata = elementFactory.newDataItem( null );
	gdata.setResultSetColumn( "Total" +i);
	fv = StructureFactory.newFormatValue();
	fv.setPattern("###0{RoundingMode=HALF_UP}");
	gdata.setProperty("numberFormat", fv);
	gdata.setProperty("textAlign","right");
	tcell.getContent( ).add( gdata );
	tcell.setProperty("backgroundColor","silver");		
	tcell.setProperty("fontWeight","bold");
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
}
// Other column
ccb = StructureFactory.createComputedColumn();	
ccb.setName("OTHERS");	
ccb.setExpression("dataSetRow[\"OTHERS\"]");	
ccb.setDataType("String");	
colBinding.addItem(ccb);

csg = StructureFactory.createComputedColumn( );
csg.setName("Total"+dataCols.length);
csg.setDataType("Integer");
csg.setAggregateOn("CaseGroup");
csg.setAggregateFunction("Sum");
var expression = new Expression("row[\"OTHERS\"]", ExpressionType.JAVASCRIPT);
aggrArgument = StructureFactory.createAggregationArgument( );
aggrArgument.setName( "Expression" );
aggrArgument.setExpressionProperty("value",expression);
csg.addArgument( aggrArgument );
colBinding.addItem( csg );		

mytable.insertColumn(dataCols.length+1,1);	


myheader = mytable.getHeader( ).get( 0 );
tcell = myheader.getCells( ).get( dataCols.length+1 );		
	
mylabel = elementFactory.newLabel( null );
mylabel.setText( "Others" );
tcell.getContent( ).add( mylabel );
tcell.setProperty("backgroundColor","silver");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
			
// and finally add data items
mydetail =  mytable.getDetail( ).get( 0 );
tcell = mydetail.getCells( ).get(  dataCols.length+1);
dynamicTextHandle = elementFactory.newTextData( null );
dynamicTextHandle.setValueExpr( "if(row[\"OTHERS\"] != null){row[\"OTHERS\"]+\" (\"+Formatter.format(Finance.percent(row[\"Total"+dataCols.length+"\"],row[\"OTHERS\"]),\"#.##\")+\"%)\"}" );
tcell.getContent( ).add( dynamicTextHandle );
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
tcell.setProperty("textAlign","right");
	
	
tcell = groupFooter.getCells( ).get( dataCols.length+1 );
gdata = elementFactory.newDataItem( null );
gdata.setResultSetColumn( "Total" +i);
fv = StructureFactory.newFormatValue();
fv.setPattern("###0{RoundingMode=HALF_UP}");
gdata.setProperty("numberFormat", fv);
gdata.setProperty("textAlign","right");
tcell.getContent( ).add( gdata );
tcell.setProperty("backgroundColor","silver");		
tcell.setProperty("fontWeight","bold");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");

group.getFooter( ).add( groupFooter );

//Serious group

mytable = reportContext.getDesignHandle().findElement("SeriousGroup");
colBinding = mytable.getColumnBindings();
// group column binding
ccb = StructureFactory.createComputedColumn();	
ccb.setName("grpClm");	
ccb.setExpression("dataSetRow[\"grpClm\"]");	
ccb.setDataType("String");	
colBinding.addItem(ccb);


// group
group = elementFactory.newTableGroup( );
group.setName("CaseGroup");
var newKeyExpr = new Expression("row[\"grpClm\"]", ExpressionType.JAVASCRIPT);
group.setExpressionProperty( "keyExpr",	newKeyExpr );
group.setInterval("none");
group.setSortDirection("asc");		
mytable.getGroups( ).add( group );

groupFooter = elementFactory.newTableRow( 2+dataCols.length);	
tcell = groupFooter.getCells( ).get( 0 );
mylabel = elementFactory.newLabel( null );
mylabel.setText( "Total" );
tcell.getContent( ).add( mylabel );
tcell.setProperty("backgroundColor","silver");	
tcell.setProperty("fontWeight","bold");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
for(i=0;i<dataCols.length;i++)
{
// Add column bindings to the table
	ccb = StructureFactory.createComputedColumn();	
	ccb.setName("IND"+i);	
	ccb.setExpression("dataSetRow[\"IND"+i+"\"]");	
	ccb.setDataType("String");	
	colBinding.addItem(ccb); 		
// Add aggregate column to group
	csg = StructureFactory.createComputedColumn( );
	csg.setName("Total"+i);
	csg.setDataType("Integer");
	csg.setAggregateOn("CaseGroup");
    csg.setAggregateFunction("Sum");
    var expression = new Expression("row[\"IND"+i+"\"]", ExpressionType.JAVASCRIPT);
    aggrArgument = StructureFactory.createAggregationArgument( );
	aggrArgument.setName( "Expression" );
	aggrArgument.setExpressionProperty("value",expression);
    csg.addArgument( aggrArgument );
	colBinding.addItem( csg );		
// Add column
	mytable.insertColumn(i+1,1);	
	
// Add column headers
	myheader = mytable.getHeader( ).get( 0 );
	tcell = myheader.getCells( ).get( i+1 );		
	
	mylabel = elementFactory.newLabel( null );
	mylabel.setText( dataCols[i] );
	tcell.getContent( ).add( mylabel );
	tcell.setProperty("backgroundColor","silver");
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
			
// and finally add data items
	mydetail =  mytable.getDetail( ).get( 0 );
	tcell = mydetail.getCells( ).get( i+1);
	dynamicTextHandle = elementFactory.newTextData( null );
	dynamicTextHandle.setValueExpr( "if(row[\"IND"+i+"\"] != null){row[\"IND"+i+"\"]+\" (\"+Formatter.format(Finance.percent(row[\"Total"+i+"\"],row[\"IND"+i+"\"]),\"#.##\")+\"%)\"}" );
	tcell.getContent( ).add( dynamicTextHandle );
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
	tcell.setProperty("textAlign","right");
	
	
	tcell = groupFooter.getCells( ).get( i+1 );
	gdata = elementFactory.newDataItem( null );
	gdata.setResultSetColumn( "Total" +i);
	fv = StructureFactory.newFormatValue();
	fv.setPattern("###0{RoundingMode=HALF_UP}");
	gdata.setProperty("numberFormat", fv);
	gdata.setProperty("textAlign","right");
	tcell.getContent( ).add( gdata );
	tcell.setProperty("backgroundColor","silver");		
	tcell.setProperty("fontWeight","bold");
	tcell.setProperty("borderTopStyle","solid");
	tcell.setProperty("borderTopColor","gray");
	tcell.setProperty("borderTopWidth","thin");
	tcell.setProperty("borderRightStyle","solid");
	tcell.setProperty("borderRightColor","gray");
	tcell.setProperty("borderRightWidth","thin");
	tcell.setProperty("borderBottomStyle","solid");
	tcell.setProperty("borderBottomColor","gray");
	tcell.setProperty("borderBottomWidth","thin");
	tcell.setProperty("borderLeftStyle","solid");
	tcell.setProperty("borderLeftColor","gray");
	tcell.setProperty("borderLeftWidth","thin");
}
// Other column
ccb = StructureFactory.createComputedColumn();	
ccb.setName("OTHERS");	
ccb.setExpression("dataSetRow[\"OTHERS\"]");	
ccb.setDataType("String");	
colBinding.addItem(ccb);

csg = StructureFactory.createComputedColumn( );
csg.setName("Total"+dataCols.length);
csg.setDataType("Integer");
csg.setAggregateOn("CaseGroup");
csg.setAggregateFunction("Sum");
var expression = new Expression("row[\"OTHERS\"]", ExpressionType.JAVASCRIPT);
aggrArgument = StructureFactory.createAggregationArgument( );
aggrArgument.setName( "Expression" );
aggrArgument.setExpressionProperty("value",expression);
csg.addArgument( aggrArgument );
colBinding.addItem( csg );		

mytable.insertColumn(dataCols.length+1,1);	


myheader = mytable.getHeader( ).get( 0 );
tcell = myheader.getCells( ).get( dataCols.length+1 );		
	
mylabel = elementFactory.newLabel( null );
mylabel.setText( "Others" );
tcell.getContent( ).add( mylabel );
tcell.setProperty("backgroundColor","silver");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
			
// and finally add data items
mydetail =  mytable.getDetail( ).get( 0 );
tcell = mydetail.getCells( ).get(  dataCols.length+1);
dynamicTextHandle = elementFactory.newTextData( null );
dynamicTextHandle.setValueExpr( "if(row[\"OTHERS\"] != null){row[\"OTHERS\"]+\" (\"+Formatter.format(Finance.percent(row[\"Total"+dataCols.length+"\"],row[\"OTHERS\"]),\"#.##\")+\"%)\"}" );
tcell.getContent( ).add( dynamicTextHandle );
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");
tcell.setProperty("textAlign","right");
	
	
tcell = groupFooter.getCells( ).get( dataCols.length+1 );
gdata = elementFactory.newDataItem( null );
gdata.setResultSetColumn( "Total" +i);
fv = StructureFactory.newFormatValue();
fv.setPattern("###0{RoundingMode=HALF_UP}");
gdata.setProperty("numberFormat", fv);
gdata.setProperty("textAlign","right");
tcell.getContent( ).add( gdata );
tcell.setProperty("backgroundColor","silver");		
tcell.setProperty("fontWeight","bold");
tcell.setProperty("borderTopStyle","solid");
tcell.setProperty("borderTopColor","gray");
tcell.setProperty("borderTopWidth","thin");
tcell.setProperty("borderRightStyle","solid");
tcell.setProperty("borderRightColor","gray");
tcell.setProperty("borderRightWidth","thin");
tcell.setProperty("borderBottomStyle","solid");
tcell.setProperty("borderBottomColor","gray");
tcell.setProperty("borderBottomWidth","thin");
tcell.setProperty("borderLeftStyle","solid");
tcell.setProperty("borderLeftColor","gray");
tcell.setProperty("borderLeftWidth","thin");

group.getFooter( ).add( groupFooter );]]></method>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="Product Level" id="1031">
            <text-property name="promptText">Product Level</text-property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">Generic name</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">Trade name</property>
                    <property name="label">Trade name</property>
                </structure>
                <structure>
                    <property name="value">Generic name</property>
                    <property name="label">Generic name</property>
                </structure>
                <structure>
                    <property name="value">Ingredient</property>
                    <property name="label">Ingredient</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="Drug Name" id="1032">
            <text-property name="promptText">Drug Name</text-property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">Rofecoxib</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name=":hidden_userId" id="1051">
            <text-property name="promptText">:hidden_userId</text-property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">Admin</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="Indication List" id="1589">
            <text-property name="promptText">Event Name</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">ARTHRITIS NOS~ARTHRALGIA</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="CS" id="207">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledMetadataBidiFormatStr</name>
                </ex-property>
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledContentBidiFormatStr</name>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">com.mysql.jdbc.Driver</property>
            <property name="odaURL">jdbc:mysql://192.168.1.5:3306/cs_acme</property>
            <property name="odaUser">root</property>
            <encrypted-property name="odaPassword" encryptionID="base64">bWFuYWdlcjEyMw==</encrypted-property>
            <property name="odaJndiName">java:comp/env/jdbc/CSDB</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="AgeGroup" id="1627">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="columnHints"/>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">grpClm</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">drug_name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">decode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">IND0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">IND1</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">OTHERS</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[	var productLevel =  params["Product Level"].value;
	var prodList = params["Drug Name"].split("~");
	var product = "'"+prodList[0]+"'";
	var indList = params["Indication List"].split("~");
	var indName = "'"+indList.join("','")+"'";
	var q="";
	var selectParams ="";
	var filter =" r where ";
	for(i=0; i < indList.length;i++){
		q=" left join (select a.:drug_level , b.age_group_dec , count(distinct (a.safety_rep_id)) as 'IND"+i+"' from cs_demo_drugs_reacs a, cs_patient b, cs_drugs c, cs_drug_indication d where a.sr_record_id = b.sr_record_id and b.record_id = c.pt_record_id and c.record_id = d.dr_record_id and d.indication_vbm = '"+indList[i]+"' and a.:drug_level = :drugs group by a.:drug_level , b.age_group_dec) T"+i+" ON D1.drug_name = T"+i+".:drug_level and D1.decode = UPPER(T"+i+".age_group_dec)";
		this.queryText = this.queryText+q;
		selectParams +=",IND"+i;
		if(i != 0){
			filter += " or";
		}
		filter += " r.IND"+i+" is not null"+" or OTHERS is not null";
	}
	var otherQuery = " left join (select a.:drug_level , b.age_group_dec , count(distinct (a.safety_rep_id)) as 'OTHERS' from cs_demo_drugs_reacs a, cs_patient b, cs_drugs c, cs_drug_indication d where a.sr_record_id = b.sr_record_id and b.record_id = c.pt_record_id and c.record_id = d.dr_record_id  and d.indication_vbm not in ("+indName+") and a.:drug_level = :drugs group by a.:drug_level , b.age_group_dec) T"+indList.length+" ON D1.drug_name = T"+indList.length+".:drug_level and D1.decode = UPPER(T"+indList.length+".age_group_dec)";
	selectParams += ",OTHERS";
	this.queryText = this.queryText+otherQuery;
	this.queryText = this.queryText+")";
	this.queryText = this.queryText+filter;
	this.queryText = this.queryText.replace(":ind_params",selectParams);
	this.queryText = this.queryText.replace(":drugs",product);
	if(productLevel == 'Generic name'){
   		productLevel = "generic_name" ;
   	} else if(productLevel == 'Trade name'){
   		productLevel = "trade_name";
  	}
	this.queryText = this.queryText.replace(":drug_level",productLevel);
	Packages.java.lang.System.out.println (this.queryText );
	]]></method>
            <property name="dataSource">CS</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">grpClm</property>
                    <property name="nativeName">grpClm</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">drug_name</property>
                    <property name="nativeName">drug_name</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">decode</property>
                    <property name="nativeName">decode</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">IND0</property>
                    <property name="nativeName">IND0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">IND1</property>
                    <property name="nativeName">IND1</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">OTHERS</property>
                    <property name="nativeName">OTHERS</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select * from (
select 1 as grpClm,D1.drug_name,D1.decode:ind_params  from (
select
p.drug_name,C1.decode
from
(select distinct drug_name
from
dict.who_dc_med_product
where
drug_name = :drugs) p
right join (select distinct a.decode,a.fk_code_list_id
from ms.ms_code a where a.fk_code_list_id=171) C1
ON C1.fk_code_list_id=171) D1]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>drug_name</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>drug_name</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>drug_name</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>CMV</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>-5</design:nativeDataTypeCode>
            <design:precision>21</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>CMV</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>CMV</design:label>
            <design:formattingHints>
              <design:displaySize>21</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>EBV</design:name>
              <design:position>3</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>-5</design:nativeDataTypeCode>
            <design:precision>21</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>EBV</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>EBV</design:label>
            <design:formattingHints>
              <design:displaySize>21</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="GenderGroup" id="2348">
            <list-property name="columnHints"/>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">grpClm</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">drug_name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">decode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">IND0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">IND1</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">OTHERS</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[	var productLevel =  params["Product Level"].value;
	var prodList = params["Drug Name"].split("~");
	var product = "'"+prodList[0]+"'";
	var indList = params["Indication List"].split("~");
	var indName = "'"+indList.join("','")+"'";
	var q="";
	var selectParams ="";
	var filter =" r where ";
	for(i=0; i < indList.length;i++){
		q=" left join (select a.:drug_level , b.gender_dec , count(distinct (a.safety_rep_id)) as 'IND"+i+"' from cs_demo_drugs_reacs a, cs_patient b, cs_drugs c, cs_drug_indication d where a.sr_record_id = b.sr_record_id and b.record_id = c.pt_record_id and c.record_id = d.dr_record_id and d.indication_vbm = '"+indList[i]+"' and a.:drug_level = :drugs group by a.:drug_level , b.gender_dec) T"+i+" ON D1.drug_name = T"+i+".:drug_level and D1.decode = UPPER(T"+i+".gender_dec)";
		this.queryText = this.queryText+q;
		selectParams +=",IND"+i;
		if(i != 0){
			filter += " or";
		}
		filter += " r.IND"+i+" is not null"+" or OTHERS is not null";
	}
	var otherQuery = " left join (select a.:drug_level , b.gender_dec , count(distinct (a.safety_rep_id)) as 'OTHERS' from cs_demo_drugs_reacs a, cs_patient b, cs_drugs c, cs_drug_indication d where a.sr_record_id = b.sr_record_id and b.record_id = c.pt_record_id and c.record_id = d.dr_record_id  and d.indication_vbm not in ("+indName+") and a.:drug_level = :drugs group by a.:drug_level , b.gender_dec) T"+indList.length+" ON D1.drug_name = T"+indList.length+".:drug_level and D1.decode = UPPER(T"+indList.length+".gender_dec)";
	selectParams += ",OTHERS";
	this.queryText = this.queryText+otherQuery;
	this.queryText = this.queryText+")";
	this.queryText = this.queryText+filter;
	this.queryText = this.queryText.replace(":ind_params",selectParams);
	this.queryText = this.queryText.replace(":drugs",product);
	if(productLevel == 'Generic name'){
   		productLevel = "generic_name" ;
   	} else if(productLevel == 'Trade name'){
   		productLevel = "trade_name";
  	}
	this.queryText = this.queryText.replace(":drug_level",productLevel);
	Packages.java.lang.System.out.println (this.queryText );
	]]></method>
            <property name="dataSource">CS</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">grpClm</property>
                    <property name="nativeName">grpClm</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">drug_name</property>
                    <property name="nativeName">drug_name</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">decode</property>
                    <property name="nativeName">decode</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">IND0</property>
                    <property name="nativeName">IND0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">IND1</property>
                    <property name="nativeName">IND1</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">OTHERS</property>
                    <property name="nativeName">OTHERS</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select * from (
select 1 as grpClm,D1.drug_name,D1.decode:ind_params  from (
select
p.drug_name,C1.decode
from
(select distinct drug_name
from
dict.who_dc_med_product
where
drug_name = :drugs) p
right join (select distinct a.decode,a.fk_code_list_id
from ms.ms_code a where a.fk_code_list_id=100) C1
ON C1.fk_code_list_id=100) D1]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="SeriousGroup" id="2350">
            <list-property name="columnHints"/>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">grpClm</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">drug_name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">decode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">IND0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">IND1</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">OTHERS</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[	var productLevel =  params["Product Level"].value;
	var prodList = params["Drug Name"].split("~");
	var product = "'"+prodList[0]+"'";
	var indList = params["Indication List"].split("~");
	var indName = "'"+indList.join("','")+"'";
	var q="";
	var selectParams ="";
	var filter =" r where ";
	for(i=0; i < indList.length;i++){
		q=" left join (select a.:drug_level , a.serious_dec , count(distinct (a.safety_rep_id)) as 'IND"+i+"' from cs_demo_drugs_reacs a, cs_patient b, cs_drugs c, cs_drug_indication d where a.sr_record_id = b.sr_record_id and b.record_id = c.pt_record_id and c.record_id = d.dr_record_id  and d.indication_vbm = '"+indList[i]+"' and a.:drug_level = :drugs group by a.:drug_level , a.serious_dec) T"+i+" ON D1.drug_name = T"+i+".:drug_level and D1.decode = UPPER(T"+i+".serious_dec)";
		this.queryText = this.queryText+q;
		selectParams +=",IND"+i;
		if(i != 0){
			filter += " or";
		}
		filter += " r.IND"+i+" is not null"+" or OTHERS is not null";
	}
	var otherQuery = " left join (select a.:drug_level , a.serious_dec , count(distinct (a.safety_rep_id)) as 'OTHERS' from cs_demo_drugs_reacs a, cs_patient b, cs_drugs c, cs_drug_indication d where a.sr_record_id = b.sr_record_id and b.record_id = c.pt_record_id and c.record_id = d.dr_record_id  and d.indication_vbm not in ("+indName+") and a.:drug_level = :drugs group by a.:drug_level , a.serious_dec) T"+indList.length+" ON D1.drug_name = T"+indList.length+".:drug_level and D1.decode = UPPER(T"+indList.length+".serious_dec)";
	selectParams += ",OTHERS";
	this.queryText = this.queryText+otherQuery;
	this.queryText = this.queryText+")";
	this.queryText = this.queryText+filter;
	this.queryText = this.queryText.replace(":ind_params",selectParams);
	this.queryText = this.queryText.replace(":drugs",product);
	if(productLevel == 'Generic name'){
   		productLevel = "generic_name" ;
   	} else if(productLevel == 'Trade name'){
   		productLevel = "trade_name";
  	}
	this.queryText = this.queryText.replace(":drug_level",productLevel);
	Packages.java.lang.System.out.println (this.queryText );
	]]></method>
            <property name="dataSource">CS</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">grpClm</property>
                    <property name="nativeName">grpClm</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">drug_name</property>
                    <property name="nativeName">drug_name</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">decode</property>
                    <property name="nativeName">decode</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">IND0</property>
                    <property name="nativeName">IND0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">IND1</property>
                    <property name="nativeName">IND1</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">OTHERS</property>
                    <property name="nativeName">OTHERS</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select * from (
select 1 as grpClm,D1.drug_name,D1.decode:ind_params  from (
select
p.drug_name,C1.decode
from
(select distinct drug_name
from
dict.who_dc_med_product
where
drug_name = :drugs) p
right join (select distinct decode,a.fk_code_list_id
from ms.ms_code a where a.fk_code_list_id=172) C1
ON C1.fk_code_list_id=172) D1]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Indications" id="2379">
            <structure name="cachedMetaData"/>
            <property name="dataSource">CS</property>
            <xml-property name="queryText"><![CDATA[select pt_name from sapphire.lib_mp_indications ind,sapphire.lib_mp p where p.record_id = ind.fk_mp_id and p.name = :drugs]]></xml-property>
        </oda-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Header Page" id="2">
            <property name="type">custom</property>
            <property name="borderBottomColor">#C0C0C0</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftColor">#C0C0C0</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightColor">#C0C0C0</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopColor">#C0C0C0</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
            <property name="height">14in</property>
            <property name="width">12in</property>
            <property name="headerHeight">0in</property>
            <property name="footerHeight">0.5in</property>
            <page-footer>
                <grid id="1062">
                    <property name="height">0.625in</property>
                    <property name="width">100%</property>
                    <column id="1063">
                        <property name="width">40%</property>
                    </column>
                    <column id="1064">
                        <property name="width">20%</property>
                    </column>
                    <column id="1065">
                        <property name="width">40%</property>
                    </column>
                    <row id="1066">
                        <cell id="1067">
                            <text id="1081">
                                <property name="paddingTop">5pt</property>
                                <property name="paddingBottom">5pt</property>
                                <property name="contentType">html</property>
                                <text-property name="content"><![CDATA[<value-of>new Date()</value-of>]]></text-property>
                            </text>
                        </cell>
                        <cell id="1068">
                            <grid id="1070">
                                <property name="width">100%</property>
                                <column id="1071">
                                    <property name="width">40%</property>
                                </column>
                                <column id="1072">
                                    <property name="width">20%</property>
                                </column>
                                <column id="1073">
                                    <property name="width">40%</property>
                                </column>
                                <row id="1074">
                                    <cell id="1075">
                                        <auto-text id="1076">
                                            <property name="fontWeight">bold</property>
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingBottom">5pt</property>
                                            <property name="paddingRight">0pt</property>
                                            <property name="textAlign">right</property>
                                            <property name="type">page-number</property>
                                        </auto-text>
                                    </cell>
                                    <cell id="1077">
                                        <text id="1078">
                                            <property name="fontWeight">bold</property>
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingBottom">5pt</property>
                                            <property name="textAlign">center</property>
                                            <property name="contentType">plain</property>
                                            <text-property name="content"><![CDATA[/]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="1079">
                                        <auto-text id="1080">
                                            <property name="fontWeight">bold</property>
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingBottom">5pt</property>
                                            <property name="textAlign">left</property>
                                            <property name="type">total-page</property>
                                        </auto-text>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                        <cell id="1069"/>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <grid id="1737">
            <column id="1738"/>
            <column id="1739"/>
            <row id="1740">
                <cell id="1741">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <label id="1681">
                        <property name="backgroundColor">silver</property>
                        <property name="fontSize">18pt</property>
                        <property name="fontWeight">bold</property>
                        <property name="paddingTop">5pt</property>
                        <property name="paddingBottom">5pt</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">Demographic summary by Indications</text-property>
                    </label>
                </cell>
            </row>
            <row id="1743">
                <cell id="1744">
                    <text-data id="1749">
                        <property name="fontWeight">bold</property>
                        <property name="paddingTop">5pt</property>
                        <property name="paddingLeft">5pt</property>
                        <property name="paddingBottom">5pt</property>
                        <expression name="valueExpr">'USER ID : '+params[":hidden_userId"].value</expression>
                        <property name="contentType">html</property>
                    </text-data>
                </cell>
                <cell id="1745"/>
            </row>
            <row id="2203">
                <property name="borderBottomColor">#808080</property>
                <property name="borderBottomStyle">solid</property>
                <property name="borderBottomWidth">thin</property>
                <cell id="2204">
                    <property name="borderBottomColor">#808080</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <text-data id="1750">
                        <property name="fontWeight">bold</property>
                        <property name="paddingTop">5pt</property>
                        <property name="paddingBottom">5pt</property>
                        <property name="paddingRight">5pt</property>
                        <property name="textAlign">left</property>
                        <expression name="valueExpr">'Product level : '+params["Product Level"].value</expression>
                        <property name="contentType">html</property>
                    </text-data>
                </cell>
                <cell id="2205">
                    <property name="borderBottomColor">#808080</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <text-data id="2206">
                        <property name="fontWeight">bold</property>
                        <property name="paddingTop">5pt</property>
                        <property name="paddingLeft">5pt</property>
                        <property name="paddingBottom">5pt</property>
                        <property name="textAlign">right</property>
                        <expression name="valueExpr">'Drug name : '+params["Drug Name"].value</expression>
                        <property name="contentType">html</property>
                    </text-data>
                </cell>
            </row>
            <row id="1746">
                <cell id="1747">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <property name="borderBottomColor">#808080</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <text id="1818">
                        <property name="fontWeight">bold</property>
                        <property name="paddingTop">5pt</property>
                        <property name="paddingLeft">5pt</property>
                        <property name="paddingBottom">10pt</property>
                        <property name="contentType">auto</property>
                        <text-property name="content"><![CDATA[Description:

This reports displays total # of cases for the selected product and event against each selected indication(s) grouped by below dimensions

 - Age group
 - Gender
 - Seriousness]]></text-property>
                    </text>
                </cell>
            </row>
        </grid>
        <label id="2363">
            <property name="fontWeight">bold</property>
            <property name="paddingTop">5pt</property>
            <property name="paddingLeft">5pt</property>
            <property name="paddingBottom">5pt</property>
            <property name="textAlign">left</property>
            <text-property name="text">By Seriousness :</text-property>
        </label>
        <table name="SeriousGroup" id="2352">
            <property name="height">100%</property>
            <property name="width">100%</property>
            <property name="dataSet">SeriousGroup</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">decode</property>
                    <text-property name="displayName">decode</text-property>
                    <expression name="expression" type="javascript">if (dataSetRow["decode"]=='Yes'){&#13;
		"Serious"&#13;
	}else if(dataSetRow["decode"]=='No'){&#13;
		"Non serious"&#13;
		}</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <column id="2359">
                <property name="width">30%</property>
            </column>
            <header>
                <row id="2353">
                    <cell id="2354">
                        <property name="backgroundColor">silver</property>
                        <property name="borderBottomColor">#808080</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#808080</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#808080</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#808080</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="2360">
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Seriousness</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="2355">
                    <cell id="2356">
                        <property name="borderBottomColor">#808080</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#808080</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#808080</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#808080</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="2361">
                            <property name="resultSetColumn">decode</property>
                        </data>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="2357">
                    <cell id="2358"/>
                </row>
            </footer>
        </table>
        <label id="2365">
            <property name="fontWeight">bold</property>
            <property name="paddingTop">5pt</property>
            <property name="paddingLeft">5pt</property>
            <property name="paddingBottom">5pt</property>
            <property name="textAlign">left</property>
            <text-property name="text">By age group :</text-property>
        </label>
        <table name="AgeGroup" id="2308">
            <property name="height">100%</property>
            <property name="width">100%</property>
            <property name="dataSet">AgeGroup</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">decode</property>
                    <text-property name="displayName">decode</text-property>
                    <expression name="expression" type="javascript">dataSetRow["decode"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="2315">
                <property name="width">30%</property>
            </column>
            <header>
                <row id="2309">
                    <cell id="2310">
                        <property name="backgroundColor">silver</property>
                        <property name="borderBottomColor">#808080</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#808080</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#808080</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#808080</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="2316">
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Age group</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="2311">
                    <cell id="2312">
                        <property name="borderBottomColor">#808080</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#808080</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#808080</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#808080</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="2317">
                            <property name="resultSetColumn">decode</property>
                        </data>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="2313">
                    <cell id="2314"/>
                </row>
            </footer>
        </table>
        <label id="2364">
            <property name="fontWeight">bold</property>
            <property name="paddingTop">5pt</property>
            <property name="paddingLeft">5pt</property>
            <property name="paddingBottom">5pt</property>
            <property name="textAlign">left</property>
            <text-property name="text">By Gender :</text-property>
        </label>
        <table name="GenderGroup" id="2318">
            <property name="height">100%</property>
            <property name="width">100%</property>
            <property name="dataSet">GenderGroup</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">decode</property>
                    <text-property name="displayName">decode</text-property>
                    <expression name="expression" type="javascript">dataSetRow["decode"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="2325">
                <property name="width">30%</property>
            </column>
            <header>
                <row id="2319">
                    <cell id="2320">
                        <property name="backgroundColor">silver</property>
                        <property name="borderBottomColor">#808080</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#808080</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#808080</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#808080</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="2342">
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Gender</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="2321">
                    <cell id="2322">
                        <property name="borderBottomColor">#808080</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#808080</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#808080</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#808080</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="2349">
                            <property name="resultSetColumn">decode</property>
                        </data>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="2323">
                    <cell id="2324"/>
                </row>
            </footer>
        </table>
    </body>
</report>
